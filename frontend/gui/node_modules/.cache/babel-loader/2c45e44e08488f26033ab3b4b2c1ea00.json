{"ast":null,"code":"import _classCallCheck from \"/Users/jeannettehigh/aihpi/frontend/gui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeannettehigh/aihpi/frontend/gui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeannettehigh/aihpi/frontend/gui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeannettehigh/aihpi/frontend/gui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeannettehigh/aihpi/frontend/gui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeannettehigh/aihpi/frontend/gui/src/containers/SignupPageView.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Input, Icon, Button } from 'antd';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          // authenticate user here\n          _this.props.onAuth(values.userName, values.email, values.password, values.confirm);\n        }\n\n        _this.props.history.push('/');\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"mail\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Signup\"), \"Or\", React.createElement(NavLink, {\n        style: {\n          marginRight: '10px'\n        },\n        to: \"/login/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" login\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar WrappedRegistrationForm = Form.create({\n  name: 'register'\n})(RegistrationForm);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(username, email, password1, password2) {\n      return dispatch(actions.authSignup(username, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","map":{"version":3,"sources":["/Users/jeannettehigh/aihpi/frontend/gui/src/containers/SignupPageView.js"],"names":["React","NavLink","Form","Input","Icon","Button","actions","connect","RegistrationForm","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onAuth","userName","email","password","confirm","history","push","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","rules","required","message","color","type","validator","marginRight","Component","WrappedRegistrationForm","create","name","mapStateToProps","loading","error","mapDispatchToProps","dispatch","username","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Input, Icon, Button } from 'antd';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\n\nclass RegistrationForm extends React.Component {\n    state = {\n        confirmDirty: false,\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // authenticate user here\n                this.props.onAuth(\n                    values.userName,\n                    values.email,\n                    values.password,\n                    values.confirm\n                );\n            }\n            this.props.history.push('/');\n        });\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n\n                <Form.Item>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                </Form.Item>\n\n                <Form.Item>\n                    {getFieldDecorator('email', {\n                        rules: [{\n                            type: 'email', message: 'The input is not valid E-mail!',\n                        }, {\n                            required: true, message: 'Please input your E-mail!',\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n                    )}\n                </Form.Item>\n\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{\n                            required: true, message: 'Please input your password!',\n                        }, {\n                            validator: this.validateToNextPassword,\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                </Form.Item>\n\n                <Form.Item>\n                    {getFieldDecorator('confirm', {\n                        rules: [{\n                            required: true, message: 'Please confirm your password!',\n                        }, {\n                            validator: this.compareToFirstPassword,\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\n                    )}\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\n                        Signup\n                    </Button>\n                    Or\n                    <NavLink\n                        style={{ marginRight: '10px' }}\n                        to='/login/'> login\n                    </NavLink>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);"]},"metadata":{},"sourceType":"module"}