{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var authLogin = function authLogin(username, password) {\n  return function (dispatch) {\n    dispatch(authStart()); // Attempt to login to the server\n\n    axios.post('http://localhost:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    }).then(function (res) {\n      // Login success logic\n      // Store the token and expire date in the browser\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authSignup = function authSignup(username, email, password1, password2) {\n  return function (dispatch) {\n    dispatch(authStart()); // Attempt to login to the server\n\n    axios.post('http://localhost:8000/rest-auth/registration/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(function (res) {\n      // Login success logic\n      // Store the token and expire date in the browser\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/jeannettehigh/aihpi/frontend/gui/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n\n        // Attempt to login to the server\n        axios.post('http://localhost:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        }).then(res => {\n            // Login success logic\n            // Store the token and expire date in the browser\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        }).catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n\n        // Attempt to login to the server\n        axios.post('http://localhost:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        }).then(res => {\n            // Login success logic\n            // Store the token and expire date in the browser\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        }).catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}